#include <stdio.h>

int recursiveBinarySearch(int arr[], int left, int right, int target) {
    if (left <= right) {
        int mid = left + (right - left) / 2;

        // Base case: Target found
        if (arr[mid] == target) {
            return mid;
        } else if (arr[mid] < target) {
            return recursiveBinarySearch(arr, mid + 1, right, target); // Search in the right half
        } else {
            return recursiveBinarySearch(arr, left, mid - 1, target); // Search in the left half
        }
    }

    // Target not found
    return -1;
}

int main() {
    int n, target, i, result;

    // Taking input for the size of the array
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);

    int arr[n];

    // Taking input for sorted array elements
    printf("Enter %d elements of the sorted array:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Taking input for the element to search
    printf("Enter the element to search: ");
    scanf("%d", &target);

    // Call the recursive binary search function
    result = recursiveBinarySearch(arr, 0, n - 1, target);

    if (result != -1) {
        printf("Element %d found at index %d (position %d).\n", target, result, result + 1);
    } else {
        printf("Element %d not found in the array.\n", target);
    }

    return 0;
}
